{
  "_format": "hh-sol-artifact-1",
  "contractName": "StarknetVerifier",
  "sourceName": "contracts/StarknetVerifier.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pedersenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "convertToBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "hash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum StarknetVerifier.NodeType",
              "name": "nodeType",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "leftHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rightHash",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.BinaryProof",
              "name": "binaryProof",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "childHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "path",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.EdgeProof",
              "name": "edgeProof",
              "type": "tuple"
            }
          ],
          "internalType": "struct StarknetVerifier.StarknetProof",
          "name": "proof",
          "type": "tuple"
        }
      ],
      "name": "hashForSingleProofNode",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "classHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "contractStateRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "hashVersion",
          "type": "uint256"
        }
      ],
      "name": "stateHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stateRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "contractStateRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "contractAddress",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "storageVarAddress",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "classHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hashVersion",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct StarknetVerifier.ContractData",
          "name": "contractData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum StarknetVerifier.NodeType",
              "name": "nodeType",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "leftHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rightHash",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.BinaryProof",
              "name": "binaryProof",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "childHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "path",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.EdgeProof",
              "name": "edgeProof",
              "type": "tuple"
            }
          ],
          "internalType": "struct StarknetVerifier.StarknetProof[]",
          "name": "contractProofArray",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum StarknetVerifier.NodeType",
              "name": "nodeType",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "leftHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rightHash",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.BinaryProof",
              "name": "binaryProof",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "childHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "path",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.EdgeProof",
              "name": "edgeProof",
              "type": "tuple"
            }
          ],
          "internalType": "struct StarknetVerifier.StarknetProof[]",
          "name": "storageProofArray",
          "type": "tuple[]"
        }
      ],
      "name": "verifiedStorageValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rootHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "path",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "enum StarknetVerifier.NodeType",
              "name": "nodeType",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "leftHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rightHash",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.BinaryProof",
              "name": "binaryProof",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "childHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "path",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.EdgeProof",
              "name": "edgeProof",
              "type": "tuple"
            }
          ],
          "internalType": "struct StarknetVerifier.StarknetProof[]",
          "name": "proofArray",
          "type": "tuple[]"
        }
      ],
      "name": "verifyProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405273de29d060d45901fb19ed6c6e959eb22d8626708e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b50604051620013a0380380620013a083398181016040528101906200008c9190620000ea565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000164565b600081519050620000e4816200014a565b92915050565b600060208284031215620000fd57600080fd5b60006200010d84828501620000d3565b91505092915050565b600062000123826200012a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001558162000116565b81146200016157600080fd5b50565b61122c80620001746000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630bd7bb261461006757806356c9442b146100975780636b01b542146100c75780639072a1b3146100f7578063a78dac0d14610127578063c96dbc8714610157575b600080fd5b610081600480360381019061007c9190610b89565b610187565b60405161008e9190610e16565b60405180910390f35b6100b160048036038101906100ac9190610afe565b610290565b6040516100be9190610e16565b60405180910390f35b6100e160048036038101906100dc9190610c5a565b610376565b6040516100ee9190610e16565b60405180910390f35b610111600480360381019061010c9190610bee565b6103a3565b60405161011e9190610e16565b60405180910390f35b610141600480360381019061013c9190610bb2565b61061f565b60405161014e9190610e16565b60405180910390f35b610171600480360381019061016c9190610bb2565b610722565b60405161017e9190610d84565b60405180910390f35b60008060009050600060018111156101c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b83600001516001811115610205577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561022c5761022583602001516000015184602001516020015161061f565b9050610287565b7f080000000000001100000000000000000000000000000000000000000000000183604001516040015161027085604001516000015186604001516020015161061f565b61027a9190610eba565b61028491906110ae565b90505b80915050919050565b60006102d56040518060400160405280601681526020017f636f6e7472616374446174612e7374617465526f6f740000000000000000000081525087600001356107b2565b60006102f3876080013588602001358960c001358a60a00135610376565b9050600061030b8860200135896060013587876103a3565b9050600061032389600001358a604001358a8a6103a3565b9050808314610367576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035e90610df6565b60405180910390fd5b81935050505095945050505050565b60008061039561038f610389888861061f565b8661061f565b8461061f565b905080915050949350505050565b600080859050600060fa905060006001905060005b868690508110156105a85760008312610595576000878783818110610406577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060c0020180360381019061041c9190610b89565b905061042781610187565b8514610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90610dd6565b60405180910390fd5b600060018111156104a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816000015160018111156104df577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561052c57600180858b901c1614925060011515831515141561050d578060200151602001519450610519565b80602001516000015194505b838061052490610feb565b945050610593565b80604001516000015194506000816040015160400151905080856105509190610f10565b94506105916040518060400160405280600c81526020017f70617468426974496e6465780000000000000000000000000000000000000000815250866107b2565b505b505b80806105a090611065565b9150506103b8565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156105dc57829350505050610617565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610dd6565b60405180910390fd5b949350505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa1e84de6106688585610722565b6040518263ffffffff1660e01b81526004016106849190610d84565b60006040518083038186803b15801561069c57600080fd5b505afa1580156106b0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106d99190610abd565b600081518110610712577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905092915050565b60606000604067ffffffffffffffff811115610767577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156107995781602001600182028036833780820191505090505b5090508360208201528260408201528091505092915050565b61084a82826040516024016107c8929190610da6565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061084e565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600061088a61088584610e56565b610e31565b905080838252602082019050828560208602820111156108a957600080fd5b60005b858110156108d957816108bf8882610aa8565b8452602084019350602083019250506001810190506108ac565b5050509392505050565b60008083601f8401126108f557600080fd5b8235905067ffffffffffffffff81111561090e57600080fd5b6020830191508360c082028301111561092657600080fd5b9250929050565b600082601f83011261093e57600080fd5b815161094e848260208601610877565b91505092915050565b600081359050610966816111cf565b92915050565b60006040828403121561097e57600080fd5b6109886040610e31565b9050600061099884828501610a93565b60008301525060206109ac84828501610a93565b60208301525092915050565b600060e082840312156109ca57600080fd5b81905092915050565b6000606082840312156109e557600080fd5b6109ef6060610e31565b905060006109ff84828501610a93565b6000830152506020610a1384828501610a93565b6020830152506040610a2784828501610a93565b60408301525092915050565b600060c08284031215610a4557600080fd5b610a4f6060610e31565b90506000610a5f84828501610957565b6000830152506020610a738482850161096c565b6020830152506060610a87848285016109d3565b60408301525092915050565b600081359050610aa2816111df565b92915050565b600081519050610ab7816111df565b92915050565b600060208284031215610acf57600080fd5b600082015167ffffffffffffffff811115610ae957600080fd5b610af58482850161092d565b91505092915050565b60008060008060006101208688031215610b1757600080fd5b6000610b25888289016109b8565b95505060e086013567ffffffffffffffff811115610b4257600080fd5b610b4e888289016108e3565b945094505061010086013567ffffffffffffffff811115610b6e57600080fd5b610b7a888289016108e3565b92509250509295509295909350565b600060c08284031215610b9b57600080fd5b6000610ba984828501610a33565b91505092915050565b60008060408385031215610bc557600080fd5b6000610bd385828601610a93565b9250506020610be485828601610a93565b9150509250929050565b60008060008060608587031215610c0457600080fd5b6000610c1287828801610a93565b9450506020610c2387828801610a93565b935050604085013567ffffffffffffffff811115610c4057600080fd5b610c4c878288016108e3565b925092505092959194509250565b60008060008060808587031215610c7057600080fd5b6000610c7e87828801610a93565b9450506020610c8f87828801610a93565b9350506040610ca087828801610a93565b9250506060610cb187828801610a93565b91505092959194509250565b6000610cc882610e82565b610cd28185610e98565b9350610ce2818560208601610fb8565b610ceb8161116c565b840191505092915050565b6000610d0182610e8d565b610d0b8185610ea9565b9350610d1b818560208601610fb8565b610d248161116c565b840191505092915050565b6000610d3c601083610ea9565b9150610d478261117d565b602082019050919050565b6000610d5f601583610ea9565b9150610d6a826111a6565b602082019050919050565b610d7e81610fae565b82525050565b60006020820190508181036000830152610d9e8184610cbd565b905092915050565b60006040820190508181036000830152610dc08185610cf6565b9050610dcf6020830184610d75565b9392505050565b60006020820190508181036000830152610def81610d2f565b9050919050565b60006020820190508181036000830152610e0f81610d52565b9050919050565b6000602082019050610e2b6000830184610d75565b92915050565b6000610e3b610e4c565b9050610e478282611034565b919050565b6000604051905090565b600067ffffffffffffffff821115610e7157610e7061113d565b5b602082029050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610ec582610fae565b9150610ed083610fae565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f0557610f046110df565b5b828201905092915050565b6000610f1b82610fa4565b9150610f2683610fa4565b9250827f800000000000000000000000000000000000000000000000000000000000000001821260008412151615610f6157610f606110df565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615610f9957610f986110df565b5b828203905092915050565b6000819050919050565b6000819050919050565b60005b83811015610fd6578082015181840152602081019050610fbb565b83811115610fe5576000848401525b50505050565b6000610ff682610fa4565b91507f8000000000000000000000000000000000000000000000000000000000000000821415611029576110286110df565b5b600182039050919050565b61103d8261116c565b810181811067ffffffffffffffff8211171561105c5761105b61113d565b5b80604052505050565b600061107082610fae565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156110a3576110a26110df565b5b600182019050919050565b60006110b982610fae565b91506110c483610fae565b9250826110d4576110d361110e565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f50726f6f6620697320696e76616c696400000000000000000000000000000000600082015250565b7f5374617465206861736820697320696e76616c69640000000000000000000000600082015250565b600281106111dc57600080fd5b50565b6111e881610fae565b81146111f357600080fd5b5056fea2646970667358221220eccdf049604e44242fe8f7bf9276fc76e322c0e3a5223c3804d93a0c1852f49e64736f6c63430008040033",
  "deployedBytecode": "",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
