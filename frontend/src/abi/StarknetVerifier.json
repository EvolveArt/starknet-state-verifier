{
  "_format": "hh-sol-artifact-1",
  "contractName": "StarknetVerifier",
  "sourceName": "contracts/StarknetVerifier.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pedersenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_starknetCoreContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "convertToBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "hash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum StarknetVerifier.NodeType",
              "name": "nodeType",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "leftHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rightHash",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.BinaryProof",
              "name": "binaryProof",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "childHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "path",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.EdgeProof",
              "name": "edgeProof",
              "type": "tuple"
            }
          ],
          "internalType": "struct StarknetVerifier.StarknetProof",
          "name": "proof",
          "type": "tuple"
        }
      ],
      "name": "hashForSingleProofNode",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "number",
          "type": "uint256"
        }
      ],
      "name": "highestBitSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "highest",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "classHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "contractStateRoot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "hashVersion",
          "type": "uint256"
        }
      ],
      "name": "stateHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "contractStateRoot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "contractAddress",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "storageVarAddress",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "classHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hashVersion",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ],
          "internalType": "struct StarknetVerifier.ContractData",
          "name": "contractData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum StarknetVerifier.NodeType",
              "name": "nodeType",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "leftHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rightHash",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.BinaryProof",
              "name": "binaryProof",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "childHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "path",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.EdgeProof",
              "name": "edgeProof",
              "type": "tuple"
            }
          ],
          "internalType": "struct StarknetVerifier.StarknetProof[]",
          "name": "contractProofArray",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum StarknetVerifier.NodeType",
              "name": "nodeType",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "leftHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rightHash",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.BinaryProof",
              "name": "binaryProof",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "childHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "path",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.EdgeProof",
              "name": "edgeProof",
              "type": "tuple"
            }
          ],
          "internalType": "struct StarknetVerifier.StarknetProof[]",
          "name": "storageProofArray",
          "type": "tuple[]"
        }
      ],
      "name": "verifiedStorageValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rootHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "path",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "enum StarknetVerifier.NodeType",
              "name": "nodeType",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "leftHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rightHash",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.BinaryProof",
              "name": "binaryProof",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "childHash",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "path",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                }
              ],
              "internalType": "struct StarknetVerifier.EdgeProof",
              "name": "edgeProof",
              "type": "tuple"
            }
          ],
          "internalType": "struct StarknetVerifier.StarknetProof[]",
          "name": "proofArray",
          "type": "tuple[]"
        }
      ],
      "name": "verifyProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001616380380620016168339818101604052810190620000379190620000d7565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000166565b600081519050620000d1816200014c565b92915050565b60008060408385031215620000eb57600080fd5b6000620000fb85828601620000c0565b92505060206200010e85828601620000c0565b9150509250929050565b600062000125826200012c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001578162000118565b81146200016357600080fd5b50565b6114a080620001766000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639072a1b31161005b5780639072a1b314610112578063a78dac0d14610142578063c96dbc8714610172578063dec201e2146101a25761007d565b80630bd7bb2614610082578063220f5628146100b25780636b01b542146100e2575b600080fd5b61009c60048036038101906100979190610d77565b6101d2565b6040516100a99190611056565b60405180910390f35b6100cc60048036038101906100c79190610da0565b6102db565b6040516100d99190611056565b60405180910390f35b6100fc60048036038101906100f79190610e9a565b610349565b6040516101099190611056565b60405180910390f35b61012c60048036038101906101279190610e2e565b610376565b6040516101399190611056565b60405180910390f35b61015c60048036038101906101579190610df2565b6105f2565b6040516101699190611056565b60405180910390f35b61018c60048036038101906101879190610df2565b6106f5565b6040516101999190610fc4565b60405180910390f35b6101bc60048036038101906101b79190610ced565b610785565b6040516101c99190611056565b60405180910390f35b6000806000905060006001811115610213577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b83600001516001811115610250577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610277576102708360200151600001518460200151602001516105f2565b90506102d2565b7f08000000000000110000000000000000000000000000000000000000000000018360400151604001516102bb8560400151600001518660400151602001516105f2565b6102c591906110fa565b6102cf9190611322565b90505b80915050919050565b6000808214156102ea57600080fd5b60008290506000600190506000608090505b600181106103415760008160018385901b61031791906111e4565b901b84161461033557808461032c91906110fa565b93508083901c92505b600181901c90506102fc565b505050919050565b60008061036861036261035c88886105f2565b866105f2565b846105f2565b905080915050949350505050565b600080859050600060fa905060006001905060005b8686905081101561057b57600083126105685760008787838181106103d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060c002018036038101906103ef9190610d77565b90506103fa816101d2565b851461043b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043290611016565b60405180910390fd5b60006001811115610475577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816000015160018111156104b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156104ff57600180858b901c161492506001151583151514156104e05780602001516020015194506104ec565b80602001516000015194505b83806104f79061125f565b945050610566565b80604001516000015194506000816040015160400151905080856105239190611150565b94506105646040518060400160405280600c81526020017f70617468426974496e6465780000000000000000000000000000000000000000815250866109a1565b505b505b8080610573906112d9565b91505061038b565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156105af578293505050506105ea565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190611016565b60405180910390fd5b949350505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa1e84de61063b85856106f5565b6040518263ffffffff1660e01b81526004016106579190610fc4565b60006040518083038186803b15801561066f57600080fd5b505afa158015610683573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106ac9190610cac565b6000815181106106e5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905092915050565b60606000604067ffffffffffffffff81111561073a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561076c5781602001600182028036833780820191505090505b5090508360208201528260408201528091505092915050565b60006108656040518060400160405280600981526020017f7374617465526f6f740000000000000000000000000000000000000000000000815250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639588eca26040518163ffffffff1660e01b815260040160206040518083038186803b15801561082857600080fd5b505afa15801561083c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108609190610dc9565b6109a1565b6000610883876060013588600001358960a001358a60800135610349565b9050600061089b886000013589604001358787610376565b9050600061094e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639588eca26040518163ffffffff1660e01b815260040160206040518083038186803b15801561090a57600080fd5b505afa15801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190610dc9565b8a602001358a8a610376565b9050808314610992576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098990611036565b60405180910390fd5b81935050505095945050505050565b610a3982826040516024016109b7929190610fe6565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a3d565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000610a79610a7484611096565b611071565b90508083825260208201905082856020860282011115610a9857600080fd5b60005b85811015610ac85781610aae8882610c97565b845260208401935060208301925050600181019050610a9b565b5050509392505050565b60008083601f840112610ae457600080fd5b8235905067ffffffffffffffff811115610afd57600080fd5b6020830191508360c0820283011115610b1557600080fd5b9250929050565b600082601f830112610b2d57600080fd5b8151610b3d848260208601610a66565b91505092915050565b600081359050610b5581611443565b92915050565b600060408284031215610b6d57600080fd5b610b776040611071565b90506000610b8784828501610c82565b6000830152506020610b9b84828501610c82565b60208301525092915050565b600060c08284031215610bb957600080fd5b81905092915050565b600060608284031215610bd457600080fd5b610bde6060611071565b90506000610bee84828501610c82565b6000830152506020610c0284828501610c82565b6020830152506040610c1684828501610c82565b60408301525092915050565b600060c08284031215610c3457600080fd5b610c3e6060611071565b90506000610c4e84828501610b46565b6000830152506020610c6284828501610b5b565b6020830152506060610c7684828501610bc2565b60408301525092915050565b600081359050610c9181611453565b92915050565b600081519050610ca681611453565b92915050565b600060208284031215610cbe57600080fd5b600082015167ffffffffffffffff811115610cd857600080fd5b610ce484828501610b1c565b91505092915050565b60008060008060006101008688031215610d0657600080fd5b6000610d1488828901610ba7565b95505060c086013567ffffffffffffffff811115610d3157600080fd5b610d3d88828901610ad2565b945094505060e086013567ffffffffffffffff811115610d5c57600080fd5b610d6888828901610ad2565b92509250509295509295909350565b600060c08284031215610d8957600080fd5b6000610d9784828501610c22565b91505092915050565b600060208284031215610db257600080fd5b6000610dc084828501610c82565b91505092915050565b600060208284031215610ddb57600080fd5b6000610de984828501610c97565b91505092915050565b60008060408385031215610e0557600080fd5b6000610e1385828601610c82565b9250506020610e2485828601610c82565b9150509250929050565b60008060008060608587031215610e4457600080fd5b6000610e5287828801610c82565b9450506020610e6387828801610c82565b935050604085013567ffffffffffffffff811115610e8057600080fd5b610e8c87828801610ad2565b925092505092959194509250565b60008060008060808587031215610eb057600080fd5b6000610ebe87828801610c82565b9450506020610ecf87828801610c82565b9350506040610ee087828801610c82565b9250506060610ef187828801610c82565b91505092959194509250565b6000610f08826110c2565b610f1281856110d8565b9350610f2281856020860161122c565b610f2b816113e0565b840191505092915050565b6000610f41826110cd565b610f4b81856110e9565b9350610f5b81856020860161122c565b610f64816113e0565b840191505092915050565b6000610f7c6010836110e9565b9150610f87826113f1565b602082019050919050565b6000610f9f6015836110e9565b9150610faa8261141a565b602082019050919050565b610fbe81611222565b82525050565b60006020820190508181036000830152610fde8184610efd565b905092915050565b600060408201905081810360008301526110008185610f36565b905061100f6020830184610fb5565b9392505050565b6000602082019050818103600083015261102f81610f6f565b9050919050565b6000602082019050818103600083015261104f81610f92565b9050919050565b600060208201905061106b6000830184610fb5565b92915050565b600061107b61108c565b905061108782826112a8565b919050565b6000604051905090565b600067ffffffffffffffff8211156110b1576110b06113b1565b5b602082029050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061110582611222565b915061111083611222565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561114557611144611353565b5b828201905092915050565b600061115b82611218565b915061116683611218565b9250827f8000000000000000000000000000000000000000000000000000000000000000018212600084121516156111a1576111a0611353565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182136000841216156111d9576111d8611353565b5b828203905092915050565b60006111ef82611222565b91506111fa83611222565b92508282101561120d5761120c611353565b5b828203905092915050565b6000819050919050565b6000819050919050565b60005b8381101561124a57808201518184015260208101905061122f565b83811115611259576000848401525b50505050565b600061126a82611218565b91507f800000000000000000000000000000000000000000000000000000000000000082141561129d5761129c611353565b5b600182039050919050565b6112b1826113e0565b810181811067ffffffffffffffff821117156112d0576112cf6113b1565b5b80604052505050565b60006112e482611222565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561131757611316611353565b5b600182019050919050565b600061132d82611222565b915061133883611222565b92508261134857611347611382565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f50726f6f6620697320696e76616c696400000000000000000000000000000000600082015250565b7f5374617465206861736820697320696e76616c69640000000000000000000000600082015250565b6002811061145057600080fd5b50565b61145c81611222565b811461146757600080fd5b5056fea2646970667358221220367b23ee1d462ff705ffc15456756271433fbf42474d08d983fc52c29167b8f964736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80639072a1b31161005b5780639072a1b314610112578063a78dac0d14610142578063c96dbc8714610172578063dec201e2146101a25761007d565b80630bd7bb2614610082578063220f5628146100b25780636b01b542146100e2575b600080fd5b61009c60048036038101906100979190610d77565b6101d2565b6040516100a99190611056565b60405180910390f35b6100cc60048036038101906100c79190610da0565b6102db565b6040516100d99190611056565b60405180910390f35b6100fc60048036038101906100f79190610e9a565b610349565b6040516101099190611056565b60405180910390f35b61012c60048036038101906101279190610e2e565b610376565b6040516101399190611056565b60405180910390f35b61015c60048036038101906101579190610df2565b6105f2565b6040516101699190611056565b60405180910390f35b61018c60048036038101906101879190610df2565b6106f5565b6040516101999190610fc4565b60405180910390f35b6101bc60048036038101906101b79190610ced565b610785565b6040516101c99190611056565b60405180910390f35b6000806000905060006001811115610213577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b83600001516001811115610250577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610277576102708360200151600001518460200151602001516105f2565b90506102d2565b7f08000000000000110000000000000000000000000000000000000000000000018360400151604001516102bb8560400151600001518660400151602001516105f2565b6102c591906110fa565b6102cf9190611322565b90505b80915050919050565b6000808214156102ea57600080fd5b60008290506000600190506000608090505b600181106103415760008160018385901b61031791906111e4565b901b84161461033557808461032c91906110fa565b93508083901c92505b600181901c90506102fc565b505050919050565b60008061036861036261035c88886105f2565b866105f2565b846105f2565b905080915050949350505050565b600080859050600060fa905060006001905060005b8686905081101561057b57600083126105685760008787838181106103d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b905060c002018036038101906103ef9190610d77565b90506103fa816101d2565b851461043b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043290611016565b60405180910390fd5b60006001811115610475577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816000015160018111156104b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156104ff57600180858b901c161492506001151583151514156104e05780602001516020015194506104ec565b80602001516000015194505b83806104f79061125f565b945050610566565b80604001516000015194506000816040015160400151905080856105239190611150565b94506105646040518060400160405280600c81526020017f70617468426974496e6465780000000000000000000000000000000000000000815250866109a1565b505b505b8080610573906112d9565b91505061038b565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156105af578293505050506105ea565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190611016565b60405180910390fd5b949350505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa1e84de61063b85856106f5565b6040518263ffffffff1660e01b81526004016106579190610fc4565b60006040518083038186803b15801561066f57600080fd5b505afa158015610683573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106ac9190610cac565b6000815181106106e5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151905092915050565b60606000604067ffffffffffffffff81111561073a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561076c5781602001600182028036833780820191505090505b5090508360208201528260408201528091505092915050565b60006108656040518060400160405280600981526020017f7374617465526f6f740000000000000000000000000000000000000000000000815250600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639588eca26040518163ffffffff1660e01b815260040160206040518083038186803b15801561082857600080fd5b505afa15801561083c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108609190610dc9565b6109a1565b6000610883876060013588600001358960a001358a60800135610349565b9050600061089b886000013589604001358787610376565b9050600061094e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639588eca26040518163ffffffff1660e01b815260040160206040518083038186803b15801561090a57600080fd5b505afa15801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190610dc9565b8a602001358a8a610376565b9050808314610992576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098990611036565b60405180910390fd5b81935050505095945050505050565b610a3982826040516024016109b7929190610fe6565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a3d565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000610a79610a7484611096565b611071565b90508083825260208201905082856020860282011115610a9857600080fd5b60005b85811015610ac85781610aae8882610c97565b845260208401935060208301925050600181019050610a9b565b5050509392505050565b60008083601f840112610ae457600080fd5b8235905067ffffffffffffffff811115610afd57600080fd5b6020830191508360c0820283011115610b1557600080fd5b9250929050565b600082601f830112610b2d57600080fd5b8151610b3d848260208601610a66565b91505092915050565b600081359050610b5581611443565b92915050565b600060408284031215610b6d57600080fd5b610b776040611071565b90506000610b8784828501610c82565b6000830152506020610b9b84828501610c82565b60208301525092915050565b600060c08284031215610bb957600080fd5b81905092915050565b600060608284031215610bd457600080fd5b610bde6060611071565b90506000610bee84828501610c82565b6000830152506020610c0284828501610c82565b6020830152506040610c1684828501610c82565b60408301525092915050565b600060c08284031215610c3457600080fd5b610c3e6060611071565b90506000610c4e84828501610b46565b6000830152506020610c6284828501610b5b565b6020830152506060610c7684828501610bc2565b60408301525092915050565b600081359050610c9181611453565b92915050565b600081519050610ca681611453565b92915050565b600060208284031215610cbe57600080fd5b600082015167ffffffffffffffff811115610cd857600080fd5b610ce484828501610b1c565b91505092915050565b60008060008060006101008688031215610d0657600080fd5b6000610d1488828901610ba7565b95505060c086013567ffffffffffffffff811115610d3157600080fd5b610d3d88828901610ad2565b945094505060e086013567ffffffffffffffff811115610d5c57600080fd5b610d6888828901610ad2565b92509250509295509295909350565b600060c08284031215610d8957600080fd5b6000610d9784828501610c22565b91505092915050565b600060208284031215610db257600080fd5b6000610dc084828501610c82565b91505092915050565b600060208284031215610ddb57600080fd5b6000610de984828501610c97565b91505092915050565b60008060408385031215610e0557600080fd5b6000610e1385828601610c82565b9250506020610e2485828601610c82565b9150509250929050565b60008060008060608587031215610e4457600080fd5b6000610e5287828801610c82565b9450506020610e6387828801610c82565b935050604085013567ffffffffffffffff811115610e8057600080fd5b610e8c87828801610ad2565b925092505092959194509250565b60008060008060808587031215610eb057600080fd5b6000610ebe87828801610c82565b9450506020610ecf87828801610c82565b9350506040610ee087828801610c82565b9250506060610ef187828801610c82565b91505092959194509250565b6000610f08826110c2565b610f1281856110d8565b9350610f2281856020860161122c565b610f2b816113e0565b840191505092915050565b6000610f41826110cd565b610f4b81856110e9565b9350610f5b81856020860161122c565b610f64816113e0565b840191505092915050565b6000610f7c6010836110e9565b9150610f87826113f1565b602082019050919050565b6000610f9f6015836110e9565b9150610faa8261141a565b602082019050919050565b610fbe81611222565b82525050565b60006020820190508181036000830152610fde8184610efd565b905092915050565b600060408201905081810360008301526110008185610f36565b905061100f6020830184610fb5565b9392505050565b6000602082019050818103600083015261102f81610f6f565b9050919050565b6000602082019050818103600083015261104f81610f92565b9050919050565b600060208201905061106b6000830184610fb5565b92915050565b600061107b61108c565b905061108782826112a8565b919050565b6000604051905090565b600067ffffffffffffffff8211156110b1576110b06113b1565b5b602082029050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061110582611222565b915061111083611222565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561114557611144611353565b5b828201905092915050565b600061115b82611218565b915061116683611218565b9250827f8000000000000000000000000000000000000000000000000000000000000000018212600084121516156111a1576111a0611353565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182136000841216156111d9576111d8611353565b5b828203905092915050565b60006111ef82611222565b91506111fa83611222565b92508282101561120d5761120c611353565b5b828203905092915050565b6000819050919050565b6000819050919050565b60005b8381101561124a57808201518184015260208101905061122f565b83811115611259576000848401525b50505050565b600061126a82611218565b91507f800000000000000000000000000000000000000000000000000000000000000082141561129d5761129c611353565b5b600182039050919050565b6112b1826113e0565b810181811067ffffffffffffffff821117156112d0576112cf6113b1565b5b80604052505050565b60006112e482611222565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561131757611316611353565b5b600182019050919050565b600061132d82611222565b915061133883611222565b92508261134857611347611382565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f50726f6f6620697320696e76616c696400000000000000000000000000000000600082015250565b7f5374617465206861736820697320696e76616c69640000000000000000000000600082015250565b6002811061145057600080fd5b50565b61145c81611222565b811461146757600080fd5b5056fea2646970667358221220367b23ee1d462ff705ffc15456756271433fbf42474d08d983fc52c29167b8f964736f6c63430008040033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
